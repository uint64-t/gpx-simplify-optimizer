toGeoJSON=function(){"use strict";function a(a){if(!a||!a.length)return 0;for(var b=0,c=0;b<a.length;b++)c=(c<<5)-c+a.charCodeAt(b)|0;return c}function b(a,b){return a.getElementsByTagName(b)}function c(a,b){return a.getAttribute(b)}function d(a,b){return parseFloat(c(a,b))}function e(a,c){var d=b(a,c);return d.length?d[0]:null}function f(a){return a.normalize&&a.normalize(),a}function g(a){for(var b=0,c=[];b<a.length;b++)c[b]=parseFloat(a[b]);return c}function h(a){var b={};for(var c in a)a[c]&&(b[c]=a[c]);return b}function i(a){return a&&f(a),a&&a.firstChild&&a.firstChild.nodeValue||""}function j(a){return g(a.replace(p,"").split(","))}function k(a){for(var b=a.replace(q,"").split(r),c=[],d=0;d<b.length;d++)c.push(j(b[d]));return c}function l(a){var b=[d(a,"lon"),d(a,"lat")],c=e(a,"ele");return c&&b.push(parseFloat(i(c))),b}function m(){return{type:"FeatureCollection",features:[]}}function n(a){return o.serializeToString(a)}var o,p=/\s*/g,q=/^\s*|\s*$/g,r=/\s+/;"undefined"!=typeof XMLSerializer?o=new XMLSerializer:"object"!=typeof exports||"object"!=typeof process||process.browser||(o=new(require("xmldom").XMLSerializer));var s={kml:function(d,f){function h(a){var b,c;return a=a||"","#"===a.substr(0,1)&&(a=a.substr(1)),(6===a.length||3===a.length)&&(b=a),8===a.length&&(c=parseInt(a.substr(0,2),16)/255,b=a.substr(2)),[b,isNaN(c)?void 0:c]}function l(a){return g(a.split(" "))}function o(a){for(var c=b(a,"coord","gx"),d=[],e=0;e<c.length;e++)d.push(l(i(c[e])));return d}function p(a){var c,d,f,g,h,l=[];if(e(a,"MultiGeometry"))return p(e(a,"MultiGeometry"));if(e(a,"MultiTrack"))return p(e(a,"MultiTrack"));for(f=0;f<t.length;f++)if(d=b(a,t[f]))for(g=0;g<d.length;g++)if(c=d[g],"Point"==t[f])l.push({type:"Point",coordinates:j(i(e(c,"coordinates")))});else if("LineString"==t[f])l.push({type:"LineString",coordinates:k(i(e(c,"coordinates")))});else if("Polygon"==t[f]){var m=b(c,"LinearRing"),n=[];for(h=0;h<m.length;h++)n.push(k(i(e(m[h],"coordinates"))));l.push({type:"Polygon",coordinates:n})}else"Track"==t[f]&&l.push({type:"LineString",coordinates:o(c)});return l}function q(a){var c,d=p(a),f={},g=i(e(a,"name")),j=i(e(a,"styleUrl")),k=i(e(a,"description")),l=e(a,"TimeSpan"),m=e(a,"ExtendedData"),n=e(a,"LineStyle"),o=e(a,"PolyStyle");if(!d.length)return[];if(g&&(f.name=g),j&&s[j]&&(f.styleUrl=j,f.styleHash=s[j]),k&&(f.description=k),l){var q=i(e(l,"begin")),r=i(e(l,"end"));f.timespan={begin:q,end:r}}if(n){var t=h(i(e(n,"color"))),u=t[0],v=t[1],w=parseFloat(i(e(n,"width")));u&&(f.stroke=u),isNaN(v)||(f["stroke-opacity"]=v),isNaN(w)||(f["stroke-width"]=w)}if(o){var x=h(i(e(o,"color"))),y=x[0],z=x[1],A=i(e(o,"fill")),B=i(e(o,"outline"));y&&(f.fill=y),isNaN(z)||(f["fill-opacity"]=z),A&&(f["fill-opacity"]="1"===A?1:0),B&&(f["stroke-opacity"]="1"===B?1:0)}if(m){var C=b(m,"Data"),D=b(m,"SimpleData");for(c=0;c<C.length;c++)f[C[c].getAttribute("name")]=i(e(C[c],"value"));for(c=0;c<D.length;c++)f[D[c].getAttribute("name")]=i(D[c])}return[{type:"Feature",geometry:1===d.length?d[0]:{type:"GeometryCollection",geometries:d},properties:f}]}f=f||{};for(var r=m(),s={},t=["Polygon","LineString","Point","Track"],u=b(d,"Placemark"),v=b(d,"Style"),w=0;w<v.length;w++)s["#"+c(v[w],"id")]=a(n(v[w])).toString(16);for(var x=0;x<u.length;x++)r.features=r.features.concat(q(u[x]));return r},gpx:function(a){function c(a,c){for(var d=b(a,c),e=[],f=0;f<d.length;f++)e.push(l(d[f]));return e}function d(a){for(var d=b(a,"trkseg"),e=[],f=0;f<d.length;f++)e.push(c(d[f],"trkpt"));return{type:"Feature",properties:j(a),geometry:{type:1===e.length?"LineString":"MultiLineString",coordinates:1===e.length?e[0]:e}}}function f(a){return{type:"Feature",properties:j(a),geometry:{type:"LineString",coordinates:c(a,"rtept")}}}function g(a){var b=j(a);return b.sym=i(e(a,"sym")),{type:"Feature",properties:b,geometry:{type:"Point",coordinates:l(a)}}}function j(a){var b,c=["name","desc","author","copyright","link","time","keywords"],d={};for(b=0;b<c.length;b++)d[c[b]]=i(e(a,c[b]));return h(d)}var k,n=b(a,"trk"),o=b(a,"rte"),p=b(a,"wpt"),q=m();for(k=0;k<n.length;k++)q.features.push(d(n[k]));for(k=0;k<o.length;k++)q.features.push(f(o[k]));for(k=0;k<p.length;k++)q.features.push(g(p[k]));return q}};return s}(),"undefined"!=typeof module&&(module.exports=toGeoJSON);